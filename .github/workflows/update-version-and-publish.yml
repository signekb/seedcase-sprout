name: Update version

on:
  push:
    branches:
      - main

jobs:
  update-version-and-changelog-and-build-distribution:
    name: "Update project's version and changelog and build distribution"
    if: "!startsWith(github.event.head_commit.message, 'build(version): ')"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Fetch all history for all branches and tags.
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - id: cz
        name: Update version and changelog
        uses: commitizen-tools/commitizen-action@5b0848cd060263e24602d1eba03710e056ef7711 # 0.24.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          changelog: true

      - name: Create GitHub release
        uses: softprops/action-gh-release@da05d552573ad5aba039eaac05058a918a7bf631 # v2.2.2
        with:
          generate_release_notes: true
          # env variable containing the new version, created by the Commitizen action
          tag_name : ${{ env.REVISION }}

      - name: Set up uv
        uses: astral-sh/setup-uv@445689ea25e0de0a23313031f5fe577c74ae45a1 # v6.3.0
        with:
          # Install a specific version of uv.
          version: "0.7.15"
          enable-cache: true
          cache-dependency-glob: uv.lock

      - name: Set up Python
        # uv specifies that this can be faster than using uv python install.
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Build
        # Builds dists from source and stores them in the dist/ directory.
        run: uv build

      - name: Upload Python package distributions
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  publish-to-testpypi:
    name: Publish Python 🐍 distribution 📦 to TestPyPI
    runs-on: ubuntu-latest
    environment: testpypi
    needs:
      - update-version-and-changelog-and-build-distribution
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing.
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Set up uv
        uses: astral-sh/setup-uv@445689ea25e0de0a23313031f5fe577c74ae45a1
        with:
          # Install a specific version of uv.
          version: "0.7.15"
          enable-cache: true
          cache-dependency-glob: uv.lock
      - name: Publish distribution 📦 to TestPyPI
        run: uv publish --index testpypi --trusted-publishing always
        # No need for manual approvals for testpypi, since it's designed to run on
        # each commit to main and is often used to indicate a healthy release publishing pipeline.

  # publish-to-pypi:
  #   name: >-
  #     Publish Python 🐍 distribution 📦 to PyPI
  #   # Only publish to PyPI on tag pushes.
  #   if: startsWith(github.ref, 'refs/tags/')
  #   needs:
  #   - build
  #   runs-on: ubuntu-latest
  #   environment:
  #     name: pypi
  #     url: https://pypi.org/p/seedcase-sprout
  #   permissions:
  #     id-token: write  # IMPORTANT: mandatory for trusted publishing
  #   steps:
  #       - name: Download all the dists
  #         uses: actions/download-artifact@v4
  #         with:
  #           name: python-package-distributions
  #           path: dist/
  #       - name: Publish distribution 📦 to PyPI
  #         run: uv publish
